import { type NextRequest, NextResponse } from "next/server"

function generateFallbackResponse(message: string, context: any, documents: any[] = []): string {
  const lowerMessage = message.toLowerCase()

  // Document context for fallback responses
  const documentContext =
    documents.length > 0
      ? `\n\nðŸ“„ Documentos disponibles: ${documents.map((doc) => doc.name).join(", ")}\nPuedes preguntarme sobre el contenido de estos documentos.`
      : ""

  // Check if user is asking about documents
  if (lowerMessage.includes("documento") || lowerMessage.includes("archivo")) {
    if (documents.length > 0) {
      return `Tienes ${documents.length} documento(s) cargado(s):
      
${documents.map((doc) => `â€¢ ${doc.name} (${doc.type})`).join("\n")}

Puedo ayudarte a analizar el contenido de estos documentos y aplicarlo a tu planeaciÃ³n didÃ¡ctica. Â¿QuÃ© aspecto especÃ­fico te interesa?`
    } else {
      return `No tienes documentos cargados actualmente. Puedes cargar archivos PDF, Word o de texto usando el botÃ³n ðŸ“Ž para enriquecer nuestras conversaciones con contenido especÃ­fico.`
    }
  }

  // Respuestas especÃ­ficas por tema
  if (lowerMessage.includes("objetivo") || lowerMessage.includes("meta")) {
    return `Para el tema "${context?.tema || "tu tema"}" en grado ${context?.grado || "8Â° o 9Â°"}, algunos objetivos podrÃ­an ser:
    
â€¢ Comprender los conceptos fundamentales del tema
â€¢ Desarrollar habilidades de anÃ¡lisis y sÃ­ntesis
â€¢ Aplicar los conocimientos en situaciones prÃ¡cticas
â€¢ Fomentar el pensamiento crÃ­tico y la participaciÃ³n activa

Â¿Te gustarÃ­a que profundice en algÃºn objetivo especÃ­fico?${documentContext}`
  }

  if (lowerMessage.includes("actividad") || lowerMessage.includes("ejercicio")) {
    return `Para desarrollar el tema "${context?.tema || "tu tema"}" te sugiero estas actividades:
    
â€¢ Lluvia de ideas inicial para activar conocimientos previos
â€¢ Trabajo en grupos pequeÃ±os con roles definidos
â€¢ Presentaciones cortas de los estudiantes
â€¢ Talleres prÃ¡cticos con ejemplos reales
â€¢ Debates estructurados sobre el tema

Considera adaptar las actividades segÃºn el tiempo disponible (${context?.duracion || "duraciÃ³n planificada"}).${documentContext}`
  }

  if (lowerMessage.includes("recurso") || lowerMessage.includes("material")) {
    return `Recursos recomendados para tu clase:
    
â€¢ Presentaciones visuales (PowerPoint o Canva)
â€¢ Videos educativos de YouTube o plataformas especializadas
â€¢ Fichas de trabajo imprimibles
â€¢ Materiales manipulativos segÃºn el tema
â€¢ Plataformas digitales como Kahoot para evaluaciÃ³n
â€¢ Libros de texto del MEN Colombia

Â¿Necesitas ayuda con algÃºn recurso especÃ­fico?${documentContext}`
  }

  if (lowerMessage.includes("evalua") || lowerMessage.includes("califica")) {
    return `Estrategias de evaluaciÃ³n para tu tema:
    
â€¢ EvaluaciÃ³n diagnÃ³stica al inicio
â€¢ EvaluaciÃ³n formativa durante el proceso (observaciÃ³n, preguntas)
â€¢ EvaluaciÃ³n sumativa al final (quiz, proyecto, presentaciÃ³n)
â€¢ RÃºbricas claras con criterios especÃ­ficos
â€¢ AutoevaluaciÃ³n y coevaluaciÃ³n entre estudiantes

Para ${context?.sesiones || "varias"} sesiones, distribuye la evaluaciÃ³n a lo largo del proceso.${documentContext}`
  }

  if (lowerMessage.includes("tiempo") || lowerMessage.includes("duraciÃ³n")) {
    return `Para organizar el tiempo en tu clase de ${context?.duracion || "duraciÃ³n planificada"}:
    
â€¢ Inicio (10-15 min): Saludo, repaso, introducciÃ³n del tema
â€¢ Desarrollo (60-70% del tiempo): Actividades principales
â€¢ Cierre (10-15 min): SÃ­ntesis, evaluaciÃ³n, tarea
â€¢ Considera descansos activos cada 20-30 minutos

Â¿Necesitas ayuda distribuyendo actividades especÃ­ficas?${documentContext}`
  }

  if (lowerMessage.includes("estÃ¡ndar") || lowerMessage.includes("competencia")) {
    return `Los estÃ¡ndares bÃ¡sicos de competencias del MEN para grados 8Â° y 9Â° incluyen:
    
â€¢ Competencias comunicativas (lectura, escritura, oralidad)
â€¢ Competencias matemÃ¡ticas (pensamiento numÃ©rico, espacial, mÃ©trico)
â€¢ Competencias cientÃ­ficas (indagaciÃ³n, explicaciÃ³n, comunicaciÃ³n)
â€¢ Competencias ciudadanas (convivencia, participaciÃ³n, pluralidad)

Â¿En quÃ© Ã¡rea especÃ­fica necesitas enfocar tu planeaciÃ³n?${documentContext}`
  }

  // Respuesta general por defecto
  return `Gracias por tu pregunta sobre "${context?.tema || "el tema de tu clase"}". 

Como asistente de planeaciÃ³n didÃ¡ctica, te puedo ayudar con:
â€¢ DefiniciÃ³n de objetivos de aprendizaje
â€¢ Sugerencias de actividades pedagÃ³gicas
â€¢ Recursos y materiales educativos
â€¢ Estrategias de evaluaciÃ³n
â€¢ DistribuciÃ³n del tiempo de clase

Para grado ${context?.grado || "8Â° o 9Â°"} y una duraciÃ³n de ${context?.duracion || "la planificada"}, Â¿podrÃ­as ser mÃ¡s especÃ­fico sobre quÃ© aspecto te gustarÃ­a desarrollar?${documentContext}

*Nota: Respuesta generada localmente. Para respuestas mÃ¡s personalizadas con IA, verifica la configuraciÃ³n de la API.*`
}

export async function POST(request: NextRequest) {
  try {
    const { message, context, documents = [] } = await request.json()

    if (!message || typeof message !== "string") {
      return NextResponse.json({ error: "Mensaje requerido" }, { status: 400 })
    }

    const fallbackResponse = generateFallbackResponse(message, context, documents)

    return NextResponse.json({
      response: fallbackResponse,
      formSuggestions: null,
    })
  } catch (error: any) {
    console.error("Error en el chat:", error)

    const {
      message,
      context,
      documents = [],
    } = await request.json().catch(() => ({ message: "", context: {}, documents: [] }))
    const fallbackResponse = generateFallbackResponse(message, context, documents)

    return NextResponse.json({
      response: fallbackResponse,
      formSuggestions: null,
    })
  }
}
